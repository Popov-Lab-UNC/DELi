[project]
name = "deli"
version = "0.1.0a0"
description = "DNA encoded library sequence analysis software with custom library design support"
authors = [
    {name = "James Wellnitz", email = "wellnitz.james@gmail.com"},
    {name = "Brandon Novy"},
    {name = "Travis Maxfield"},
    {name = "Jason Lin"}
]
maintainers = [
    {name = "James Wellnitz", email = "wellnitz.james@gmail.com"},
    {name = "Brandon Novy", email = "novy@unc.edu"},
    {name = "Jason Lin", email = "shuhang@unc.edu"}
]
readme = "README.md"
classifiers = [
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Bio-Informatics"
]
requires-python = ">=3.10,<4.0"
dependencies = [
    "click>=8.1.3",
    "pyyaml==6.0.2",
    "numba>=0.60.0",
    "numpy<2.0",
    "Levenshtein>=0.25.0",
    "polars>=0.20.10",
    "tqdm>=4.66.4",
    "plotly>=5.20.0",
    "Jinja2>=3.1.3",
    "matplotlib>=3.9.3",
    "scipy>=1.14.1",
    "rdkit>=2024.9.5",
    "pandas>=2.2.3",
    "cutadapt==5.0",
    "biopython==1.85",
    "dnaio==1.2.3",
    "seaborn>=0.12.2",
    "scikit-learn>=1.4.2",
    "matplotlib-venn==0.11.10",
    "typing-extensions>=4.0.0"
]

[project.optional-dependencies]
ml = [
    "torch>=2.2.0",
    "torchvision>=0.17.0",
    "torchaudio>=2.2.0",
    "pytorch-lightning>=2.0.0",
    "torch-geometric==2.6.1"
]

[project.urls]
Homepage = "https://github.com/Popov-Lab-UNC/DELi"
Repository = "https://github.com/Popov-Lab-UNC/DELi"
Issues = "https://github.com/Popov-Lab-UNC/DELi/issues"

[project.scripts]
deli = "deli.cli:cli"

[tool.poetry]
packages = [
    { include = "deli", from = "src" },
    { include = "deli/py.typed", from = "src" },
]
include = [
    { path = "src/deli/templates/*", format = ["sdist", "wheel"] }
]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pre-commit = "~3.8.0"
mypy = "^1.8.0"
types-PyYAML = "6.0.12.20241230"
poetry = "^1.7.1"
poetry-bumpversion = "^0.3.1"
ruff = "^0.5.5"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "~7.2.0"
pytest-cov = "~4.0.0"
pytest-html = "^3.2.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "^7.1.2"

[tool.poetry.group.notebook]
optional = true

[tool.poetry.group.notebook.dependencies]
ipykernel = "5.5.5"
notebook = "7.1.3"
ipython = "7.22.0"

[[tool.poetry.source]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
priority = "explicit"



[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry_bumpversion.file."docs/conf.py"]
search = 'release = "{current_version}"'
replace = 'release = "{new_version}"'

[tool.poetry_bumpversion.file."src/deli/__init__.py"]
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'

[[tool.mypy.overrides]]
module = ["untyped_package.*"]
follow_untyped_imports = true

[tool.mypy]
files = ["src"]

[tool.coverage.report]
fail_under = 75

[tool.pytest.ini_options]
addopts = """
    --color=yes
    --html=test-results/unit-tests-results.html
"""
markers = [
    "unit: marks tests as unit tests",
    "functional: marks test as functional tests",
]
testpaths = ["tests"]

[tool.ruff]
lint.select = [
    "F",
    "E",
    "W",
    "I001",
    "I002",
    "B",
    "D"
]
src = ["src", "tests"]
line-length = 99
lint.ignore = [
    "D400",
    "D401",
    "D200"
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.isort]
lines-after-imports = 2
